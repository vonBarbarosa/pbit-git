#!/bin/bash
#
# pre-commit-pbit: have git handle pbit - Power BI template - files by deflating them and storing
#                   the files in the repository, not the zip file. 
#
#                   companion to post-commit-pbit
#

# -- config -- #
TMP_PREFIX='.~' # prefix unzipped directory--should NOT conflict with 
                   # anything in your repo

# -- end config -- #

echo
echo "=== Pre-commit PBIT processing ===="

unpack_pbit () {
    # unzip the pbit file 
    if [ -e "$1" ]; then
        if [ -e "${TMP_PREFIX}$1" ]; then rm -rf "${TMP_PREFIX}$1"; fi
        unzip "$1" -d "${TMP_PREFIX}$1"
    else
        # abort the commit if this isn't an pbit file somehow
        echo "$1 is not an pbit file. this is a bug."
        exit 3
    fi
}

# create a placeholder text file for the .pbit file, which uniquely identifies
# it and prevents losing work on a checkout
# TODO it might fail if file is in use, create a check
replace_with_placeholder () {
    sha1sum "$1" | tee "$1" > /dev/null # hack for overwriting without temp file
}

# TODO xmllint might fail if libxml2-utils is not installed
reformat_xmls () {
    # reformat the xml file to many lines
    find "$1" -name "*.xml" -type f -exec xmllint --output '{}' --format '{}' \;
}


# TODO jq might fail if jq is not installed
reformat_jsons () {
    # reformat the json file to many lines
    for i in $(find "$1" -name "*.json" -type f); do
        jq . "$i" > "$i.tmp" && mv "$i.tmp" "$i"
    done
}

# TODO check if PBIT is in use

# unpack all the zipfiles (if the pbit has been staged)
for i in $(git diff --name-only --cached -- *.pbit); do 
    dir=$(dirname "$i")
    file=$(basename "$i")
    cd "$dir"
    unpack_pbit "$file"
    # TODO it might fail if file is in use, create a check
    replace_with_placeholder "$file"
    echo -n "Commit placeholder file: "
    file "$file"
    reformat_xmls "${TMP_PREFIX}$file"
    reformat_jsons "${TMP_PREFIX}$file"
    cd -

    # stage the PBIT files and the placeholder
    git add "$dir/${TMP_PREFIX}$file"
    git add "$dir/$file"
done

echo "=== End of pre-commit processing ==="
echo

